{"timestamp":"2025-07-20T13:16:33.755036","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-20T13:16:33.758734","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/spotify-airflow-orchestrate-lambda-Glue.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-20T13:16:34.377014Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:16:34.379375Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:16:34.379748Z","level":"info","event":"Current task name:trigger_extract_lambda","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:16:34.380060Z","level":"info","event":"Dag name:lambda_glue_trigger_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:16:34.385096","level":"info","event":"Invoking AWS Lambda function: spotify_api_extract with payload: None","logger":"airflow.task.operators.airflow.providers.amazon.aws.operators.lambda_function.LambdaInvokeFunctionOperator"}
{"timestamp":"2025-07-20T13:16:34.429790","level":"info","event":"Connection Retrieved 'aws-airlow-conn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-07-20T13:16:34.430507","level":"info","event":"AWS Connection (conn_id='aws-airlow-conn', conn_type='aws') credentials retrieved from login and password.","logger":"airflow.providers.amazon.aws.utils.connection_wrapper.AwsConnectionWrapper"}
{"timestamp":"2025-07-20T13:16:41.432146","level":"info","event":"Lambda response metadata: {'RequestId': '57ddce8e-be2c-43cd-bff6-43d3d9727098', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 20 Jul 2025 13:16:41 GMT', 'content-type': 'application/json', 'content-length': '4', 'connection': 'keep-alive', 'x-amzn-requestid': '57ddce8e-be2c-43cd-bff6-43d3d9727098', 'x-amzn-remapped-content-length': '0', 'x-amz-executed-version': '$LATEST', 'x-amzn-trace-id': 'Root=1-687cec37-0664736a3637d92152fa2a02;Parent=166ee336b5a5bffd;Sampled=0;Lineage=1:106cd099:0'}, 'RetryAttempts': 0}","logger":"airflow.task.operators.airflow.providers.amazon.aws.operators.lambda_function.LambdaInvokeFunctionOperator"}
{"timestamp":"2025-07-20T13:16:41.433993","level":"info","event":"Lambda function invocation succeeded: {'RequestId': '57ddce8e-be2c-43cd-bff6-43d3d9727098', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 20 Jul 2025 13:16:41 GMT', 'content-type': 'application/json', 'content-length': '4', 'connection': 'keep-alive', 'x-amzn-requestid': '57ddce8e-be2c-43cd-bff6-43d3d9727098', 'x-amzn-remapped-content-length': '0', 'x-amz-executed-version': '$LATEST', 'x-amzn-trace-id': 'Root=1-687cec37-0664736a3637d92152fa2a02;Parent=166ee336b5a5bffd;Sampled=0;Lineage=1:106cd099:0'}, 'RetryAttempts': 0}","logger":"airflow.task.operators.airflow.providers.amazon.aws.operators.lambda_function.LambdaInvokeFunctionOperator"}
{"timestamp":"2025-07-20T13:16:41.437058","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019827fa-9c6f-796e-ba50-c341e4cf472f'), task_id='trigger_extract_lambda', dag_id='lambda_glue_trigger_dag', run_id='scheduled__2025-07-20T13:16:30.634672+00:00', try_number=1, map_index=-1, hostname='088db65685fb', context_carrier={}, task=<Task(LambdaInvokeFunctionOperator): trigger_extract_lambda>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 20, 13, 16, 32, 888621, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/lambda_glue_trigger_dag/runs/scheduled__2025-07-20T13%3A16%3A30.634672%2B00%3A00/tasks/trigger_extract_lambda?try_number=1')","logger":"task"}
{"timestamp":"2025-07-20T13:16:41.598568Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:16:41.599271Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:16:41.601878Z","level":"info","event":"Task operator:<Task(LambdaInvokeFunctionOperator): trigger_extract_lambda>","chan":"stdout","logger":"task"}
