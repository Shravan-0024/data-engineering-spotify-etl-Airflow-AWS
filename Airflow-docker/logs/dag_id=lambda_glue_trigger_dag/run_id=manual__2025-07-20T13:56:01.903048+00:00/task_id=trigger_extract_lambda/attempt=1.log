{"timestamp":"2025-07-20T13:56:05.615991","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-20T13:56:05.629605","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/spotify-airflow-orchestrate-lambda-Glue.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-20T13:56:06.266719Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:56:06.267885Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:56:06.268196Z","level":"info","event":"Current task name:trigger_extract_lambda","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:56:06.268333Z","level":"info","event":"Dag name:lambda_glue_trigger_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:56:06.268967","level":"info","event":"Invoking AWS Lambda function: spotify_api_extract with payload: None","logger":"airflow.task.operators.airflow.providers.amazon.aws.operators.lambda_function.LambdaInvokeFunctionOperator"}
{"timestamp":"2025-07-20T13:56:06.298766","level":"info","event":"Connection Retrieved 'aws-airlow-conn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-07-20T13:56:06.299468","level":"info","event":"AWS Connection (conn_id='aws-airlow-conn', conn_type='aws') credentials retrieved from login and password.","logger":"airflow.providers.amazon.aws.utils.connection_wrapper.AwsConnectionWrapper"}
{"timestamp":"2025-07-20T13:56:13.109002","level":"info","event":"Lambda response metadata: {'RequestId': '35c548d7-9064-4e5e-880c-f20a7d5f5f69', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 20 Jul 2025 13:56:13 GMT', 'content-type': 'application/json', 'content-length': '4', 'connection': 'keep-alive', 'x-amzn-requestid': '35c548d7-9064-4e5e-880c-f20a7d5f5f69', 'x-amzn-remapped-content-length': '0', 'x-amz-executed-version': '$LATEST', 'x-amzn-trace-id': 'Root=1-687cf57b-56554d21677490991be7424a;Parent=171039463afd8dc2;Sampled=0;Lineage=1:106cd099:0'}, 'RetryAttempts': 0}","logger":"airflow.task.operators.airflow.providers.amazon.aws.operators.lambda_function.LambdaInvokeFunctionOperator"}
{"timestamp":"2025-07-20T13:56:13.110828","level":"info","event":"Lambda function invocation succeeded: {'RequestId': '35c548d7-9064-4e5e-880c-f20a7d5f5f69', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 20 Jul 2025 13:56:13 GMT', 'content-type': 'application/json', 'content-length': '4', 'connection': 'keep-alive', 'x-amzn-requestid': '35c548d7-9064-4e5e-880c-f20a7d5f5f69', 'x-amzn-remapped-content-length': '0', 'x-amz-executed-version': '$LATEST', 'x-amzn-trace-id': 'Root=1-687cf57b-56554d21677490991be7424a;Parent=171039463afd8dc2;Sampled=0;Lineage=1:106cd099:0'}, 'RetryAttempts': 0}","logger":"airflow.task.operators.airflow.providers.amazon.aws.operators.lambda_function.LambdaInvokeFunctionOperator"}
{"timestamp":"2025-07-20T13:56:13.113688","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198281e-c519-75ec-abd2-24f7a5a02c67'), task_id='trigger_extract_lambda', dag_id='lambda_glue_trigger_dag', run_id='manual__2025-07-20T13:56:01.903048+00:00', try_number=1, map_index=-1, hostname='088db65685fb', context_carrier={}, task=<Task(LambdaInvokeFunctionOperator): trigger_extract_lambda>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 20, 13, 56, 2, 898626, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/lambda_glue_trigger_dag/runs/manual__2025-07-20T13%3A56%3A01.903048%2B00%3A00/tasks/trigger_extract_lambda?try_number=1')","logger":"task"}
{"timestamp":"2025-07-20T13:56:13.228220Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:56:13.228660Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:56:13.236240Z","level":"info","event":"Task operator:<Task(LambdaInvokeFunctionOperator): trigger_extract_lambda>","chan":"stdout","logger":"task"}
