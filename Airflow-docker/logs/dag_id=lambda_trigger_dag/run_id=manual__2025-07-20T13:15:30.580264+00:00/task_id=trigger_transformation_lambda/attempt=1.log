{"timestamp":"2025-07-20T13:15:43.236419","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-20T13:15:43.237061","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/spotify-airflow-orchestrate-onlyLambda.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-20T13:15:43.367454Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:15:43.368607Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:15:43.368707Z","level":"info","event":"Current task name:trigger_transformation_lambda","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:15:43.368782Z","level":"info","event":"Dag name:lambda_trigger_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:15:43.367105","level":"info","event":"Invoking AWS Lambda function: spotify_transformation_load with payload: None","logger":"airflow.task.operators.airflow.providers.amazon.aws.operators.lambda_function.LambdaInvokeFunctionOperator"}
{"timestamp":"2025-07-20T13:15:43.376606","level":"info","event":"Connection Retrieved 'aws-airlow-conn'","logger":"airflow.hooks.base"}
{"timestamp":"2025-07-20T13:15:43.376713","level":"info","event":"AWS Connection (conn_id='aws-airlow-conn', conn_type='aws') credentials retrieved from login and password.","logger":"airflow.providers.amazon.aws.utils.connection_wrapper.AwsConnectionWrapper"}
{"timestamp":"2025-07-20T13:15:53.038883","level":"info","event":"Lambda response metadata: {'RequestId': '8cca2f26-5f5e-40df-9957-cf1f3701e08b', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 20 Jul 2025 13:15:52 GMT', 'content-type': 'application/json', 'content-length': '4', 'connection': 'keep-alive', 'x-amzn-requestid': '8cca2f26-5f5e-40df-9957-cf1f3701e08b', 'x-amzn-remapped-content-length': '0', 'x-amz-executed-version': '$LATEST', 'x-amzn-trace-id': 'Root=1-687cec00-161780db74f43017274f329b;Parent=5b40c0d4163517b5;Sampled=0;Lineage=1:54eeacc4:0'}, 'RetryAttempts': 0}","logger":"airflow.task.operators.airflow.providers.amazon.aws.operators.lambda_function.LambdaInvokeFunctionOperator"}
{"timestamp":"2025-07-20T13:15:53.040354","level":"info","event":"Lambda function invocation succeeded: {'RequestId': '8cca2f26-5f5e-40df-9957-cf1f3701e08b', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Sun, 20 Jul 2025 13:15:52 GMT', 'content-type': 'application/json', 'content-length': '4', 'connection': 'keep-alive', 'x-amzn-requestid': '8cca2f26-5f5e-40df-9957-cf1f3701e08b', 'x-amzn-remapped-content-length': '0', 'x-amz-executed-version': '$LATEST', 'x-amzn-trace-id': 'Root=1-687cec00-161780db74f43017274f329b;Parent=5b40c0d4163517b5;Sampled=0;Lineage=1:54eeacc4:0'}, 'RetryAttempts': 0}","logger":"airflow.task.operators.airflow.providers.amazon.aws.operators.lambda_function.LambdaInvokeFunctionOperator"}
{"timestamp":"2025-07-20T13:15:53.045492","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019827f9-abb9-74ec-9fd0-786bcbd90f11'), task_id='trigger_transformation_lambda', dag_id='lambda_trigger_dag', run_id='manual__2025-07-20T13:15:30.580264+00:00', try_number=1, map_index=-1, hostname='088db65685fb', context_carrier={}, task=<Task(LambdaInvokeFunctionOperator): trigger_transformation_lambda>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 20, 13, 15, 42, 692559, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/lambda_trigger_dag/runs/manual__2025-07-20T13%3A15%3A30.580264%2B00%3A00/tasks/trigger_transformation_lambda?try_number=1')","logger":"task"}
{"timestamp":"2025-07-20T13:15:53.236133Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:15:53.237247Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T13:15:53.238461Z","level":"info","event":"Task operator:<Task(LambdaInvokeFunctionOperator): trigger_transformation_lambda>","chan":"stdout","logger":"task"}
